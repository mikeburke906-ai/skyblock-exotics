
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Listings
    match /listings/{id} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.sellerUid == request.auth.uid;
      allow delete: if request.auth != null && resource.data.sellerUid == request.auth.uid;
      allow update: if false;
    }

    // Games (coinflip)
    match /games/{id} {
      allow read: if true;
      // Create by creator
      allow create: if request.auth != null
        && request.resource.data.creatorUid == request.auth.uid
        && request.resource.data.status == 'open';
      // Controlled updates
      allow update: if request.auth != null && (
        // Join
        (resource.data.status == 'open' && resource.data.joinerUid == null
          && request.resource.data.joinerUid == request.auth.uid) ||
        // Reveal (each can set their own reveal; we can't hash-check in rules)
        (request.auth.uid == resource.data.creatorUid && ('creatorReveal' in request.resource.data))
        || (request.auth.uid == resource.data.joinerUid && ('joinerReveal' in request.resource.data))
        // Vote
        || (request.auth.uid == resource.data.creatorUid && ('creatorWinner' in request.resource.data))
        || (request.auth.uid == resource.data.joinerUid && ('joinerWinner' in request.resource.data))
        // Finalize only if both set same winner and one of them finalizes
        || (('winnerUid' in request.resource.data) && request.resource.data.status == 'finished'
            && resource.data.creatorWinner != null && resource.data.joinerWinner != null
            && resource.data.creatorWinner == resource.data.joinerWinner
            && (request.auth.uid == resource.data.creatorUid || request.auth.uid == resource.data.joinerUid))
      );
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.creatorUid || request.auth.uid == resource.data.joinerUid
      );
    }

    // User profiles (stats)
    match /userProfiles/{uid} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == uid;
    }

    // Reputation: reports, reviews, payouts (append-only by signed-in users)
    match /reports/{id} { allow read: if true; allow create: if request.auth != null; allow update, delete: if false; }
    match /reviews/{id} { allow read: if true; allow create: if request.auth != null; allow update, delete: if false; }
    match /payouts/{id} { allow read: if true; allow create: if request.auth != null; allow update, delete: if false; }
  }
}
